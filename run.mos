loadModel(Modelica);
getErrorString();

loadFile("connectors.mo");
getErrorString();

loadFile("constants.mo");
getErrorString();

loadFile("randgen.mo");
getErrorString();

loadFile("extFunction.mo");
getErrorString();

loadFile("drone/drone.mo");
getErrorString();

loadFile("MonitorCollision.mo");
getErrorString();

loadFile("algorithms/flockingModule.mo");
getErrorString();

loadFile("algorithms/psoController.mo");
getErrorString();

loadFile("algorithms/collisionAvoidance.mo");
getErrorString();

loadFile("drone/setPoint.mo");
getErrorString();

loadFile("drone/controller.mo");
getErrorString();

loadFile("faultSystem.mo");
getErrorString();

loadFile("intruders/intruders.mo");
getErrorString();

loadFile("intruders/intrudersPoint.mo");
getErrorString();

loadFile("intruders/intrudersController.mo");
getErrorString();

loadFile("intruders/rockets.mo");
getErrorString();

loadFile("intruders/rocketPoint.mo");
getErrorString();

loadFile("intruders/rocketController.mo");
getErrorString();

loadFile("system.mo");
getErrorString();

//setCommandLineOptions("-d=initialization");
//getErrorString();

simulate(System, stopTime=1800);
getErrorString();

plot({drone.x[1], drone.y[1], drone.z[1], drone.x[2], drone.y[2], drone.z[2], ctr.setx[1], ctr.sety[1], ctr.setz[1],
 ctr.setx[2], ctr.sety[2], ctr.setz[2], col.outCollision}, externalWindow=true);

//plot({rocket.x[1], rocket.y[1], rocket.z[1], rockP.droneFollowed[1]}, externalWindow = true);

//plot({intruder.x[1],intruder.x[2], intruder.y[1],intruder.y[2],intruder.z[1],intruder.z[2]}, externalWindow = true);

//plot({drone.droneState[1], drone.droneState[2]}, externalWindow=true);



